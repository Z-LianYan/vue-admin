{"remainingRequest":"/Users/xiezhenhong/Desktop/test/future/vue-admin-template/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/xiezhenhong/Desktop/test/future/vue-admin-template/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xiezhenhong/Desktop/test/future/vue-admin-template/src/views/login/index.vue","mtime":1572511410140},{"path":"/Users/xiezhenhong/Desktop/test/future/vue-admin-template/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiezhenhong/Desktop/test/future/vue-admin-template/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xiezhenhong/Desktop/test/future/vue-admin-template/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiezhenhong/Desktop/test/future/vue-admin-template/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { validUsername } from '@/utils/validate'\nimport { mapState } from 'vuex'\nexport default {\n  name: 'Login',\n  data() {\n    const validateUsername = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('Please enter the user name'))\n      } else {\n        callback()\n      }\n    }\n    const validatePassword = (rule, value, callback) => {\n      if (value.length < 6) {\n        callback(new Error('The password can not be less than 6 digits'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      loginForm: {\n        username: 'root',\n        password: '123456'\n      },\n      loginRules: {\n        username: [{ required: true, trigger: 'blur', validator: validateUsername }],\n        password: [{ required: true, trigger: 'blur', validator: validatePassword }]\n      },\n      loading: false,\n      passwordType: 'password',\n      redirect: undefined\n    }\n  },\n  computed:{\n    ...mapState({\n      token:state => state.user.token,\n    })\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        this.redirect = route.query && route.query.redirect\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    showPwd() {\n      if (this.passwordType === 'password') {\n        this.passwordType = ''\n      } else {\n        this.passwordType = 'password'\n      }\n      this.$nextTick(() => {\n        this.$refs.password.focus()\n      })\n    },\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true\n          this.$store.dispatch('user/login', this.loginForm).then((res) => {\n            console.log(\"res\",res);\n            this.$router.push({ path: this.redirect || '/' })\n            this.loading = false\n          }).catch(() => {\n            this.loading = false\n          })\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    }\n  }\n}\n",null]}